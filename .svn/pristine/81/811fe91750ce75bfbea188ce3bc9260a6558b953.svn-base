package ld27;

import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Panel;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import ld27.menu.Menu;
import ld27.menu.Menu.MenuFunction;
import ld27.menu.Words;

public class GameMenu extends Panel {
	private Menu m;
	public GameMenu(final Container parent) {
		setPreferredSize(new Dimension(Menu.SCREEN_WIDTH, Menu.SCREEN_HEIGHT));
		Words.VOID_COLOR = new Color(0x111111);
		Words.LETTER_COLOR = new Color(0xCCCCCC);
		m = new Menu("Nameless");
		m.addSelection(new MenuFunction() {
			public void run() {
				GamePanel panel = new GamePanel();
				parent.removeAll();
				parent.add(panel);
				if (parent instanceof AppletGame) {
					((AppletGame) parent).gp = panel;
				} else if (parent instanceof DesktopGame) {
					((DesktopGame) parent).gp = panel;
				}
			}
			public String name() {
				return "Play";
			}
		});
		m.addSelection(new MenuFunction() {
			public void run() {
				
			}
			public String name() {
				return "Instructions";
			}
		});
		if (!(parent instanceof AppletGame)) {
			m.addSelection(new MenuFunction() {
				public void run() {
					System.exit(0);
				}
				public String name() {
					return "Quit";
				}
			});
		}
		setFocusable(true);
		requestFocus();
		addKeyListener(new KeyAdapter(){
			public void keyReleased(KeyEvent e) {
				if (e.getKeyCode() == KeyEvent.VK_UP)
					m.selectorUp();
				else if (e.getKeyCode() == KeyEvent.VK_DOWN)
					m.selectorDown();
				else if (e.getKeyCode() == KeyEvent.VK_ENTER)
					m.select();
			}
		});
	}
	public void paint(Graphics g) {
		g.setColor(Words.VOID_COLOR);
		g.fillRect(0, 0, getWidth(), getHeight());
		m.paintMenu(g);
	}
}
